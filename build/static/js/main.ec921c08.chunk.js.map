{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/ContactElement/ContactElement.module.css","Components/Container/Container.module.css","Components/Section/Section.module.css","redux/actions.js","redux/reducer.js","redux/contactSlice.js","redux/store.js","Components/Container/Container.js","Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactElement/ContactElement.js","Components/ContactList/ContactList.js","views/Phonebook.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","contacts","JSON","parse","localStorage","getItem","id","name","number","itemsReducer","createReducer","actions","state","payload","some","contact","includes","alert","addContacts","window","setItem","stringify","deleteContacts","filter","filterReducer","_","combineReducers","items","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","mutation","contactId","url","method","invalidatesTags","addNewContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","store","useAddNewContactMutation","useFindContactsQuery","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","Container","children","className","s","container","Section","title","protoType","PropTypes","string","ContactForm","onSubmit","useState","setName","setNumber","handleChange","event","currentTarget","value","resetForm","form","preventDefault","uuidv4","label","input","type","pattern","required","onChange","input_number","button","func","Filter","onChangeFilter","isRequired","ContactsEl","onDeleteContact","ce","box","btn","onClick","Contacts","c","list","map","key","item","connect","dispatch","target","data","error","isFetching","ContactList","toLocaleLowerCase","App","Phonebook","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec921c08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__YmxMc\",\"input\":\"Filter_input__1IPB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Emw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactElement_box__36DiQ\",\"btn\":\"ContactElement_btn__2ZxtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3A7u1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__17-lM\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const asyncActionCreator = args => dispatch => {\r\n//   //http\r\n//   // fetch().then(x=>dispatch(aaa(x)).catch(y=>yyy(y)))\r\n// };\r\n//в компоненте:\r\n// dispatch(asyncActionCreator(5));\r\n\r\nexport const addContact = createAction('contacts/Add');\r\n\r\nexport const deleteContact = createAction('contacts/Delete');\r\n\r\nexport const changeFilter = createAction('filter/Change');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst defaultContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts =\r\n  JSON.parse(localStorage.getItem('contacts')) ?? defaultContacts;\r\n\r\nconst addingContacts = (state, { payload }) => {\r\n  if (state.some(contact => contact.name.includes(payload.name))) {\r\n    alert(`${payload.name} is already in contacts!`);\r\n    return state;\r\n  }\r\n\r\n  const addContacts = [...state, payload];\r\n  window.localStorage.setItem('contacts', JSON.stringify(addContacts));\r\n  return addContacts;\r\n};\r\n\r\nconst deletionContacts = (state, { payload }) => {\r\n  const deleteContacts = [...state.filter(contact => contact.id !== payload)];\r\n  window.localStorage.setItem('contacts', JSON.stringify(deleteContacts));\r\n  return deleteContacts;\r\n};\r\n\r\nconst itemsReducer = createReducer(contacts, {\r\n  [actions.addContact]: addingContacts,\r\n  [actions.deleteContact]: deletionContacts,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://619965819022ea0017a7ae55.mockapi.io/',\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => '/Contacts',\n      providesTags: ['Contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/Contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    addNewContact: builder.mutation({\n      query: newContact => ({\n        url: '/Contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useAddNewContactMutation,\n  useFindContactsQuery,\n} = contactsApi;\n","import { configureStore } from '@reduxjs/toolkit';\nimport filterReducer from './reducer';\nimport { contactsApi } from './contactSlice';\n// import {\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import phonebookReducer from './reducer';\n\n// const myMiddleware = store => next => action => {\n//   console.log('Моя прослойка!', action);\n\n//   next(action);\n// };\n\n// function myMiddleware(store) {\n//   return function (next) {\n//     return function (action) {\n//       //body\n//     };\n//   };\n// }\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   // myMiddleware,\n//   // logger,\n// ];\n\nexport const store = configureStore({\n  reducer: {\n    filter: filterReducer,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.protoType = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    onSubmit(contact);\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Enter name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only contain letters, apostrophe, dash and spaces. For example: Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label className={s.label}>\n        Enter number\n        <input\n          className={s.input_number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"The phone number can consist of numerals, spaces, dashes, brackets and start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Save\n      </button>\n    </form>\n  );\n}\n\nContactForm.protoType = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Enter the contact's name. Search is not sensitive to input characters.\"\n        required\n        onChange={onChangeFilter}\n        value={filter}\n      ></input>\n    </label>\n  );\n};\n\nFilter.protoType = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ce from './ContactElement.module.css';\n\nconst ContactsEl = ({ name, number, id, onDeleteContact }) => (\n  <p className={ce.box}>\n    <span>{name}:</span>\n    <span>{number}</span>\n    <button\n      className={ce.btn}\n      type=\"button\"\n      onClick={() => onDeleteContact(id)}\n    >\n      Remove\n    </button>\n  </p>\n);\nContactsEl.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default ContactsEl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport c from './ContactList.module.css';\nimport ContactsEl from '../ContactElement/ContactElement';\n\nconst Contacts = ({ contacts, deleteContact }) => (\n  <ul className={c.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={c.item}>\n        <ContactsEl\n          name={name}\n          number={number}\n          onDeleteContact={() => deleteContact(id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Contacts;\n","import React from 'react';\nimport {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n} from '../redux/contactSlice';\nimport { connect } from 'react-redux';\nimport Container from '../Components/Container/Container';\nimport Section from '../Components/Section/Section';\nimport ContactForm from '../Components/ContactForm/ContactForm';\nimport Filter from '../Components/Filter/Filter';\nimport ContactList from '../Components/ContactList/ContactList';\nimport * as actions from '../redux/actions';\n\nfunction ContactsPage({ filter, changeFilter }) {\n  const { data, error, isFetching } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  function filtration(value) {\n    if (value === '') {\n      return data;\n    } else {\n      return data.filter(contact => {\n        return contact.name.toLocaleLowerCase().includes(value);\n      });\n    }\n  }\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm contacts={data} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter filter={filter} onChangeFilter={changeFilter} />\n        {isFetching && <h4>Loading...</h4>}\n        {data && (\n          <ContactList\n            contacts={filtration(filter)}\n            deleteContact={deleteContact}\n          />\n        )}\n        {error && <h4>{error}</h4>}\n      </Section>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => ({\n  filter: state.filter.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: value => dispatch(actions.changeFilter(value.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\n","// import { Routes, Route } from 'react-router-dom';\nimport React from 'react';\nimport Container from './Components/Container/Container';\nimport Phonebook from './views/Phonebook';\n\nfunction App() {\n  return (\n    <Container>\n      <Phonebook />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nconsole.log(store);\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <BrowserRouter> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </BrowserRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Ufa0\",\"label\":\"ContactForm_label__3pgfB\",\"input\":\"ContactForm_input__1Yh9F\",\"input-number\":\"ContactForm_input-number__3pA98\",\"input_number\":\"ContactForm_input_number__33vba\",\"button\":\"ContactForm_button__1jzLr\"};"],"sourceRoot":""}